{"ast":null,"code":"!function (s) {\n  var e = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  s.languages.css = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\//,\n    atrule: {\n      pattern: /@[\\w-]+?[\\s\\S]*?(?:;|(?=\\s*\\{))/i,\n      inside: {\n        rule: /@[\\w-]+/\n      }\n    },\n    url: RegExp(\"url\\\\((?:\" + e.source + \"|.*?)\\\\)\", \"i\"),\n    selector: RegExp(\"[^{}\\\\s](?:[^{};\\\"']|\" + e.source + \")*?(?=\\\\s*\\\\{)\"),\n    string: {\n      pattern: e,\n      greedy: !0\n    },\n    property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    important: /!important\\b/i,\n    function: /[-a-z0-9]+(?=\\()/i,\n    punctuation: /[(){};:,]/\n  }, s.languages.css.atrule.inside.rest = s.languages.css;\n  var a = s.languages.markup;\n  a && (a.tag.addInlined(\"style\", \"css\"), s.languages.insertBefore(\"inside\", \"attr-value\", {\n    \"style-attr\": {\n      pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n      inside: {\n        \"attr-name\": {\n          pattern: /^\\s*style/i,\n          inside: a.tag.inside\n        },\n        punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n        \"attr-value\": {\n          pattern: /.+/i,\n          inside: s.languages.css\n        }\n      },\n      alias: \"language-css\"\n    }\n  }, a.tag));\n}(Prism);","map":null,"metadata":{},"sourceType":"script"}