{"ast":null,"code":"import _objectSpread from \"D:\\\\Web_Root\\\\tenine\\\\tenine-blog-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { createAction, handleActions } from 'redux-actions';\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'api/api'; // 액션 타입\n\nconst INITIALIZE = 'editor/INITIALIZE';\nconst CHANGE_INPUT = 'editor/CHANGE_INPUT';\nconst WRITE_POST = 'editor/WRITE_POST'; // 액션 생성자\n\nexport const initialize = createAction(INITIALIZE);\nexport const changeInput = createAction(CHANGE_INPUT); // 상태 초기화\n\nconst initialState = Map({\n  title: '',\n  markdown: ''\n}); // 리듀서\n\nexport default handleActions(_objectSpread({\n  [INITIALIZE]: (state, action) => initialState,\n  [CHANGE_INPUT]: (state, action) => {\n    const _action$payload = action.payload,\n          name = _action$payload.name,\n          value = _action$payload.value;\n    return state.set(name, value);\n  }\n}, pender({\n  type: WRITE_POST,\n  onSuccess: (state, action) => {\n    const _id = action.payload.data._id;\n    return state.set('postId', _id);\n  }\n})), initialState);","map":{"version":3,"sources":["D:\\Web_Root\\tenine\\tenine-blog-frontend\\src\\store\\modules\\editor.js"],"names":["createAction","handleActions","Map","pender","api","INITIALIZE","CHANGE_INPUT","WRITE_POST","initialize","changeInput","initialState","title","markdown","state","action","payload","name","value","set","type","onSuccess","_id","data"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,SAArB,C,CAEA;;AACA,MAAMC,UAAU,GAAG,mBAAnB;AACA,MAAMC,YAAY,GAAG,qBAArB;AACA,MAAMC,UAAU,GAAG,mBAAnB,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAGR,YAAY,CAACK,UAAD,CAA/B;AACP,OAAO,MAAMI,WAAW,GAAGT,YAAY,CAACM,YAAD,CAAhC,C,CAEP;;AACA,MAAMI,YAAY,GAAGR,GAAG,CAAC;AACvBS,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,QAAQ,EAAE;AAFa,CAAD,CAAxB,C,CAKA;;AACA,eAAeX,aAAa;AAC1B,GAACI,UAAD,GAAc,CAACQ,KAAD,EAAQC,MAAR,KAAmBJ,YADP;AAE1B,GAACJ,YAAD,GAAgB,CAACO,KAAD,EAAQC,MAAR,KAAmB;AAAA,4BACTA,MAAM,CAACC,OADE;AAAA,UACzBC,IADyB,mBACzBA,IADyB;AAAA,UACnBC,KADmB,mBACnBA,KADmB;AAEjC,WAAOJ,KAAK,CAACK,GAAN,CAAUF,IAAV,EAAgBC,KAAhB,CAAP;AACD;AALyB,GAMvBd,MAAM,CAAC;AACRgB,EAAAA,IAAI,EAAEZ,UADE;AAERa,EAAAA,SAAS,EAAC,CAACP,KAAD,EAAOC,MAAP,KAAkB;AAAA,UACnBO,GADmB,GACXP,MAAM,CAACC,OAAP,CAAeO,IADJ,CACnBD,GADmB;AAE1B,WAAOR,KAAK,CAACK,GAAN,CAAU,QAAV,EAAqBG,GAArB,CAAP;AACD;AALO,CAAD,CANiB,GAazBX,YAbyB,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { Map } from 'immutable';\r\nimport { pender } from 'redux-pender';\r\n\r\nimport * as api from 'api/api';\r\n\r\n// 액션 타입\r\nconst INITIALIZE = 'editor/INITIALIZE';\r\nconst CHANGE_INPUT = 'editor/CHANGE_INPUT';\r\nconst WRITE_POST = 'editor/WRITE_POST';\r\n\r\n// 액션 생성자\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeInput = createAction(CHANGE_INPUT);\r\n\r\n// 상태 초기화\r\nconst initialState = Map({\r\n  title: '',\r\n  markdown: ''\r\n});\r\n\r\n// 리듀서\r\nexport default handleActions({\r\n  [INITIALIZE]: (state, action) => initialState,\r\n  [CHANGE_INPUT]: (state, action) => {\r\n    const { name, value } = action.payload;\r\n    return state.set(name, value);\r\n  },\r\n  ...pender({\r\n    type: WRITE_POST,\r\n    onSuccess:(state,action) => {\r\n      const {_id}  = action.payload.data;\r\n      return state.set('postId' , _id);\r\n    }\r\n  })\r\n}, initialState)"]},"metadata":{},"sourceType":"module"}