{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web_Root\\\\tenine\\\\tenine-blog-frontend\\\\src\\\\components\\\\editor\\\\MarkdownRender.js\";\nimport React, { Component } from 'react';\nimport marked from 'marked';\nimport './MarkdownRender.scss';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism-okaidia.css';\nimport 'prismjs/components/prism-bash.min.js';\nimport 'prismjs/components/prism-javascript.min.js';\nimport 'prismjs/components/prism-jsx.min.js';\nimport 'prismjs/components/prism-css.min.js';\n\nclass MarkdownRender extends Component {\n  // SSR 마크다운 처리\n  constructor(props) {\n    super(props);\n    this.state = {\n      html: ''\n    };\n\n    this.renderMarkdown = () => {\n      const markdown = this.props.markdown;\n\n      if (!markdown) {\n        this.setState({\n          html: ''\n        });\n        return;\n      }\n\n      this.setState({\n        html: marked(markdown, {\n          breaks: true,\n          sanitize: true\n        })\n      });\n    };\n\n    const _markdown = props.markdown;\n    this.state = {\n      html: _markdown ? marked(props.markdown, {\n        breaks: true,\n        sanitize: true\n      }) : ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.markdown !== this.props.markdown) {\n      this.renderMarkdown();\n    }\n\n    if (prevState.html !== this.state.html) {\n      Prism.highlightAll();\n    }\n  }\n\n  render() {\n    const html = this.state.html;\n    const markup = {\n      __html: html\n    };\n    return React.createElement(\"div\", {\n      className: \"markdown-render\",\n      dangerouslySetInnerHTML: markup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default MarkdownRender;","map":{"version":3,"sources":["D:\\Web_Root\\tenine\\tenine-blog-frontend\\src\\components\\editor\\MarkdownRender.js"],"names":["React","Component","marked","Prism","MarkdownRender","constructor","props","state","html","renderMarkdown","markdown","setState","breaks","sanitize","componentDidUpdate","prevProps","prevState","highlightAll","render","markup","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,uBAAP;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,kCAAP;AACA,OAAO,sCAAP;AACA,OAAO,4CAAP;AACA,OAAO,qCAAP;AACA,OAAO,qCAAP;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAmBrC;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAnBnBC,KAmBmB,GAnBX;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAmBW;;AAAA,SAjBnBC,cAiBmB,GAjBF,MAAM;AAAA,YACbC,QADa,GACA,KAAKJ,KADL,CACbI,QADa;;AAGrB,UAAI,CAACA,QAAL,EAAe;AACb,aAAKC,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAE;AAAR,SAAd;AACA;AACD;;AAED,WAAKG,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAEN,MAAM,CAACQ,QAAD,EAAW;AACrBE,UAAAA,MAAM,EAAE,IADa;AAErBC,UAAAA,QAAQ,EAAE;AAFW,SAAX;AADA,OAAd;AAMD,KAGkB;;AAAA,UAGTH,SAHS,GAGIJ,KAHJ,CAGTI,QAHS;AAKjB,SAAKH,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEE,SAAQ,GAAGR,MAAM,CAACI,KAAK,CAACI,QAAP,EAAiB;AACtCE,QAAAA,MAAM,EAAE,IAD8B;AACxBC,QAAAA,QAAQ,EAAE;AADc,OAAjB,CAAT,GAET;AAHM,KAAb;AAKD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAID,SAAS,CAACL,QAAV,KAAuB,KAAKJ,KAAL,CAAWI,QAAtC,EAAgD;AAC9C,WAAKD,cAAL;AACD;;AAED,QAAIO,SAAS,CAACR,IAAV,KAAmB,KAAKD,KAAL,CAAWC,IAAlC,EAAwC;AACtCL,MAAAA,KAAK,CAACc,YAAN;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCV,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEP,UAAMW,MAAM,GAAG;AAAEC,MAAAA,MAAM,EAAEZ;AAAV,KAAf;AAEA,WACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,uBAAuB,EAAEW,MAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AApDoC;;AAuDvC,eAAef,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport marked from 'marked';\r\n\r\nimport './MarkdownRender.scss';\r\n\r\nimport Prism from 'prismjs';\r\nimport 'prismjs/themes/prism-okaidia.css';\r\nimport 'prismjs/components/prism-bash.min.js';\r\nimport 'prismjs/components/prism-javascript.min.js';\r\nimport 'prismjs/components/prism-jsx.min.js';\r\nimport 'prismjs/components/prism-css.min.js';\r\n\r\nclass MarkdownRender extends Component {\r\n  state = { html: '' };\r\n\r\n  renderMarkdown = () => {\r\n    const { markdown } = this.props;\r\n\r\n    if (!markdown) {\r\n      this.setState({ html: '' });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      html: marked(markdown, {\r\n        breaks: true,\r\n        sanitize: true\r\n      })\r\n    })\r\n  }\r\n\r\n  // SSR 마크다운 처리\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { markdown } = props;\r\n\r\n    this.state = {\r\n      html: markdown ? marked(props.markdown, {\r\n        breaks: true, sanitize: true\r\n      }) : ''\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.markdown !== this.props.markdown) {\r\n      this.renderMarkdown();\r\n    }\r\n\r\n    if (prevState.html !== this.state.html) {\r\n      Prism.highlightAll();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { html } = this.state;\r\n    const markup = { __html: html };\r\n\r\n    return (\r\n      <div\r\n        className=\"markdown-render\"\r\n        dangerouslySetInnerHTML={markup}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MarkdownRender;"]},"metadata":{},"sourceType":"module"}