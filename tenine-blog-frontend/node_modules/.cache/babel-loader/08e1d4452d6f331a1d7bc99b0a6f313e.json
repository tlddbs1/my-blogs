{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web_Root\\\\tenine\\\\tenine-blog-frontend\\\\src\\\\containers\\\\editor\\\\EditorHeaderContainer.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { EditorHeader } from 'components/editor';\nimport * as editorActions from 'store/modules/editor';\n\nclass EditorHeaderContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleBack = () => {\n      const history = this.props.history;\n      history.back();\n    };\n\n    this.handleSubmit = () => {\n      const _this$props = this.props,\n            title = _this$props.title,\n            markdown = _this$props.markdown,\n            editorActions = _this$props.editorActions,\n            history = _this$props.history;\n      const post = {\n        title,\n        body: markdown\n      };\n    };\n  }\n\n  componentDidMount() {\n    const EditorActions = this.props.EditorActions;\n    EditorActions.initialize();\n  }\n\n  render() {\n    const handleBack = this.handleBack,\n          handleSubmit = this.handleSubmit;\n    return React.createElement(EditorHeader, {\n      onBack: handleBack,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  title: state.editor.get('title'),\n  markdown: state.editor.get('markdown')\n}), dispatch => ({\n  EditorActions: bindActionCreators(editorActions, dispatch)\n}))(withRouter(EditorHeaderContainer));","map":{"version":3,"sources":["D:\\Web_Root\\tenine\\tenine-blog-frontend\\src\\containers\\editor\\EditorHeaderContainer.js"],"names":["React","Component","withRouter","bindActionCreators","connect","EditorHeader","editorActions","EditorHeaderContainer","handleBack","history","props","back","handleSubmit","title","markdown","post","body","componentDidMount","EditorActions","initialize","render","state","editor","get","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;;AAEA,MAAMC,qBAAN,SAAoCN,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAM1CO,UAN0C,GAM7B,MAAM;AAAA,YACPC,OADO,GACK,KAAKC,KADV,CACPD,OADO;AAEfA,MAAAA,OAAO,CAACE,IAAR;AACH,KATyC;;AAAA,SAW1CC,YAX0C,GAW3B,MAAM;AAAA,0BACmC,KAAKF,KADxC;AAAA,YACVG,KADU,eACVA,KADU;AAAA,YACFC,QADE,eACFA,QADE;AAAA,YACSR,aADT,eACSA,aADT;AAAA,YACwBG,OADxB,eACwBA,OADxB;AAEjB,YAAMM,IAAI,GAAG;AAACF,QAAAA,KAAD;AAASG,QAAAA,IAAI,EAAGF;AAAhB,OAAb;AACH,KAdyC;AAAA;;AAC1CG,EAAAA,iBAAiB,GAAG;AAAA,UACRC,aADQ,GACU,KAAKR,KADf,CACRQ,aADQ;AAEhBA,IAAAA,aAAa,CAACC,UAAd;AACH;;AAaDC,EAAAA,MAAM,GAAE;AAAA,UACGZ,UADH,GAC+B,IAD/B,CACGA,UADH;AAAA,UACeI,YADf,GAC+B,IAD/B,CACeA,YADf;AAEJ,WACI,oBAAC,YAAD;AACI,MAAA,MAAM,EAAEJ,UADZ;AAEI,MAAA,QAAQ,EAAEI,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AAzByC;;AA4B9C,eAAeR,OAAO,CACjBiB,KAAD,KAAW;AACPR,EAAAA,KAAK,EAAGQ,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,OAAjB,CADD;AAEPT,EAAAA,QAAQ,EAAGO,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAjB;AAFJ,CAAX,CADkB,EAKjBC,QAAD,KAAa;AACTN,EAAAA,aAAa,EAAGf,kBAAkB,CAACG,aAAD,EAAekB,QAAf;AADzB,CAAb,CALkB,CAAP,CAQbtB,UAAU,CAACK,qBAAD,CARG,CAAf","sourcesContent":["import React , { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { EditorHeader } from 'components/editor';\r\nimport * as editorActions from 'store/modules/editor'\r\n\r\nclass EditorHeaderContainer extends Component {\r\n    componentDidMount() {\r\n        const { EditorActions } = this.props;\r\n        EditorActions.initialize();\r\n    }\r\n\r\n    handleBack = () => {\r\n        const { history } = this.props;\r\n        history.back(); \r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {title , markdown , editorActions, history} = this.props;\r\n        const post = {title , body : markdown};\r\n    }\r\n\r\n\r\n    render(){\r\n        const {handleBack, handleSubmit} = this;\r\n        return(\r\n            <EditorHeader\r\n                onBack={handleBack}\r\n                onSubmit={handleSubmit}\r\n            />\r\n        );\r\n    } \r\n}\r\n\r\nexport default connect(\r\n    (state) =>({\r\n        title : state.editor.get('title'),\r\n        markdown : state.editor.get('markdown'),\r\n    }),\r\n    (dispatch)=>({\r\n        EditorActions : bindActionCreators(editorActions,dispatch)\r\n    })\r\n)(withRouter(EditorHeaderContainer));"]},"metadata":{},"sourceType":"module"}